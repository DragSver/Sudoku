// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Sudoku.DataAccess;

#nullable disable

namespace Sudoku.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240408010111_AddUpdateSudokuBoard")]
    partial class AddUpdateSudokuBoard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Sudoku.Domain.Entities.SudokuBoard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("SudokuBoardModelJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SudokuBoards");
                });

            modelBuilder.Entity("Sudoku.Domain.Entities.SudokuUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SudokuUsers");
                });

            modelBuilder.Entity("Sudoku.Domain.Entities.SudokuBoard", b =>
                {
                    b.HasOne("Sudoku.Domain.Entities.SudokuUser", "User")
                        .WithMany("SudokuBoards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Sudoku.Domain.Entities.SudokuUser", b =>
                {
                    b.Navigation("SudokuBoards");
                });
#pragma warning restore 612, 618
        }
    }
}
