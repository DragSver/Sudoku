version: '3.4'

networks:
  api-dev:
    driver: bridge 
    
volumes:
  db_volume:
  rabbit_data:

services:
  api:
    image: api:latest
    depends_on:
      - db
      - rabbitmq
      - redis
    build:
      context: Sudoku.API
      dockerfile: Dockerfile
    restart: always
    ports:
      - 5000:8080
    environment: 
     - ConnectionString=host=db;port=5432;database=sudokudb;username=sudokuuser;password=sudokuuser
    networks:
      - api-dev

  sudoku_processor:
    container_name: sudoku_processor
    depends_on:
      - rabbitmq
      - redis
    build:
      context: Sudoku.SudokuProcessor
      dockerfile: Dockerfile
    restart: always
    environment:
      - RpcServer__Host=rabbitmq
      - RpcServer__Port=5672
      - RpcServer__UserName=rmquser
      - RpcServer__UserPass=rabbitpass
      - RpcServer__QueueName=sudokucreate
      - RpcServer__Retriescount=5
      - RpcServer__ResponseTimeout=3000
    networks:
      - api-dev  

  db:
    image: postgres:latest
    ports:
     - 5431:5432
    restart: always
    volumes:
     - ./pg_init.sh:/docker-entrypoint-initdb.d/db.sh
     - db_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=sudokuuser
      - POSTGRES_PASSWORD=sudokuuser
      - SQL_DATABASE=sudokudb
    networks:
      - api-dev

  rabbitmq:
    image: rabbitmq:3.7.3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_USERNAME=rmquser
      - RABBITMQ_PASSWORD=rabbitpass
    networks:
      - api-dev

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: always
    networks:
      - api-dev
